plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "io.github.kobylynskyi.graphql.codegen" version "5.3.0"

}

group = 'com.syscho.graphal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'io.projectreactor:reactor-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.2'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:11.0.0'
    implementation 'com.graphql-java-kickstart:graphiql-spring-boot-starter:11.0.0'
    implementation 'com.graphql-java-kickstart:voyager-spring-boot-starter:11.0.0'
    testImplementation 'com.graphql-java-kickstart:graphql-spring-boot-starter-test:11.0.0'
    runtimeOnly 'com.h2database:h2:1.4.200'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.4.2'
    //extended scalar support
    implementation group: 'com.graphql-java', name: 'graphql-java-extended-scalars', version: '2021-08-15T23-45-48-a9f6ec6'
    // https://mvnrepository.com/artifact/javax.validation/validation-api
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

}


graphqlCodegen {
    graphqlSchemas.rootDir = "${projectDir}\\src\\main\\resources\\schema"
    graphqlSchemas.includePattern = ".*\\.graphqls?"
    outputDir = new File("$buildDir/generated")
    packageName = "com.syscho.graphql.generated.types"
    customTypesMapping = [
            DateTime       : "java.time.LocalDateTime",
            Date           : "java.time.LocalDate",
            DateTime_Scalar: "java.time.LocalDateTime"
    ]
    parentInterfaces {
        queryResolver = "graphql.kickstart.tools.GraphQLQueryResolver"
        mutationResolver = "graphql.kickstart.tools.GraphQLMutationResolver"
    }
    generateApis = true
    generateClient = false
    //  generateExtensionFieldsResolvers = true
    apiPackageName = "com.syscho.graphql.generated.resolver"
    apiNamePrefixStrategy = "FILE_NAME_AS_PREFIX"
    apiInterfaceStrategy = "DO_NOT_GENERATE"
    apiRootInterfaceStrategy = "INTERFACE_PER_SCHEMA"
    generateDataFetchingEnvironmentArgumentInApis = true
    apiReturnType = "java.util.concurrent.CompletableFuture"

}

// Automatically generate GraphQL code on project build:
compileJava.dependsOn 'graphqlCodegen'

// Add generated sources to your project source sets:
sourceSets.main.java.srcDir "$buildDir/generated"

test {
    useJUnitPlatform()
}
